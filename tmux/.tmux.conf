unbind C-b
set -g prefix C-Space
bind C-space send-prefix

# clear screen and scrollback buffer on Ctrl+U
#unbind -n C-u
bind l send-keys C-l #\; clear-history

# more history
set -g history-limit 100000

# reload tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# use mouse for selecting windows, scrolling, resizing, copying
set -g mouse on

set -g @tmux_power_theme "kanagawa"
run-shell "~/.config/tmux/tmux-power.tmux"

# window selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# resize panes using the arrow keys
# might as well use them for something
bind Right resize-pane -R 5
bind Left resize-pane -L 5
bind Up resize-pane -U 2
bind Down resize-pane -D 2

# windows
unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively
bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# change from block to pipe in nvim
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -r Tab new-window "~/.local/bin/tmux-sessionizer"

#### COLOUR (Solarized dark)
if-shell 'test -n "$ALACRITTY_WINDOW_ID"' "set -g default-terminal 'tmux-256color'; set -ag terminal-overrides ',xterm-256color:RGB'"


set-option -g base-index 1
